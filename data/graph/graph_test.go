package graph

import (
	"log"
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestGraph(T *testing.T) {
	log.Println("Graph testing start")
	g := New(3)
	assert.Equal(T, 3, g.Nodes())
	assert.Equal(T, 0, g.Edges())
	g.print()
	var edge Edge
	edge.SetSrc(0)
	edge.SetDest(1)
	log.Println("After adding (0,1)")
	err := g.AddEdge(edge)
	g.print()
	assert.Nil(T, err)
	assert.Equal(T, 1, g.Edges())
	assert.Equal(T, true, g.Present(edge))
	err = g.AddEdge(edge)
	assert.NotNil(T, err)
	edge.SetDest(2)
	assert.Equal(T, false, g.Present(edge))
	edge.SetDest(-1)
	err = g.AddEdge(edge)
	assert.NotNil(T, err)
	edge.SetSrc(1)
	edge.SetDest(-1)
	err = g.DeleteEdge(edge)
	assert.NotNil(T, err)
	edge.SetDest(2)
	err = g.DeleteEdge(edge)
	assert.NotNil(T, err)
	log.Println("After deleting (0,1)")
	edge.SetSrc(0)
	edge.SetDest(1)
	err = g.DeleteEdge(edge)
	assert.Nil(T, err)
	assert.Equal(T, 0, g.Edges())
	g.print()
	log.Println("After againg adding (0,1)")
	edge.SetSrc(0)
	edge.SetDest(1)
	err = g.AddEdge(edge)
	g.print()
	assert.Nil(T, err)
	log.Println("After adding (2,1)")
	edge.SetSrc(2)
	edge.SetDest(1)
	err = g.AddEdge(edge)
	g.print()
	assert.Nil(T, err)
	log.Println("After adding (2,2)")
	edge.SetSrc(2)
	edge.SetDest(2)
	err = g.AddEdge(edge)
	g.print()
	assert.Nil(T, err)
	log.Println("Graph Testing end")
}
